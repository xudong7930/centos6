# nginx worker进程运行用户以及用户组
user  root root;

# nginx worker数量: cpu_core_num*2 | auto
worker_processes  auto;

# 指定一个nginx进程可以打开的最多文件描述符数目
worker_rlimit_nofile  65535;

# 全局错误日志文件，日志输出级别有debug、info、notice、warn、error、crit
error_log  logs/error.log  notice;

# 指定主进程id的存储文件位置
pid  logs/nginx.pid;

# 设定nginx的工作模式及连接数上限
events {
    # epoll是多路复用IO中的一种方式,可大大提高nginx性能
    use epoll;

    # Per Worker process max connects
    worker_connections  1024;

    multi_accept  on;
}

http {
    # 设定mime类型
    include       mime.types;

    # 不显示nginx版本
    server_tokens off;

    # 默认文件类型
    default_type  application/octet-stream;

    # autoindex
	autoindex on;
    autoindex_exact_size off;
    autoindex_localtime on;

	charset utf-8;

    server_names_hash_bucket_size 64;
	fastcgi_read_timeout 300;

    # log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  other '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent $request_body "$http_referer" "$http_user_agent" $http_x_forwarded_for';

    access_log  logs/access.log  main;
    access_log  logs/access.other.log  other;

    # sendfile 指定nginx是否调用sendfile函数来输出文件,对于普通应用,必须设on;如果是用于下载的重IO应用,可设置为off
    sendfile     on;
    tcp_nopush  on;
    tcp_nodelay  on;

    # 连接超时
    keepalive_timeout  65;
    keepalive_requests  10000;
    types_hash_max_size  2048;

    server_tokens  off;
    dav_methods  off;

    #gzip settings;
    gzip  on;
    gzip_disable  "msie6";
    gzip_vary  on;
    gzip_proxied  any;
    gzip_comp_level  6;
    gzip_buffers  16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    #设定请求缓冲
    client_header_buffer_size  128k;
    large_client_header_buffers  4 128k;

    include conf.d/*.conf;
}
